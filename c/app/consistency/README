分布式领域CAP理论，
    Consistency(一致性), 数据一致更新，所有数据变动都是同步的
    Availability(可用性), 好的响应性能
    Partition tolerance(分区容忍性) 可靠性

    定理：任何分布式系统只可同时满足二点，没法三者兼顾。
    忠告：架构师不要将精力浪费在如何设计能满足三者的完美分布式系统，而是应该进行取舍。
    ● 一致性（C）：
          在分布式系统中的所有数据备份，在同一时刻是否同样的值。
          一致性被称为原子对象，任何的读写都应该看起来是“原子“的，或串行的。
         （等同于所有节点访问同一份最新的数据副本）
    ● 可用性（A）：
          在集群中一部分节点故障后，集群整体是否还能响应客户端的读写请求。（对数据更新具备高可用性）
    ● 分区容错性（P）：
          以实际效果而言，分区相当于对通信的时限要求。
          系统如果不能在时限内达成数据一致性，就意味着发生了分区的情况，必须就当前操作在C和A之间做出选择。
    实例： 现有系统 A， B两个系统
        在一个交易中A 调用 B，B响应后，A才可以继续进行
        现在B系统出现异常，则如果交易允许继续进行可用性A 得到保证 ，而一致性C则会得不到保证。
                             如果不允许交易进行，且A做回滚处理，则一致性C得到保证，而可用性A则会得不到保证。

    选择：
        1.（CA）放弃Partition Tolerance： 
                一种做法是将所有的东西（与事务相关的）都放到一台机器上。这个选择会严重影响scale限制。
        2.（CP）放弃Availability：
                一旦遇到partition 事件，受影响的服务需要等待数据一致，因此在等待期间就无法对外提供服务。
                在多个节点上控制这一点会相当复杂，而且恢复的节点需要处理逻辑，以便平滑地返回服务状态。
        3.（AP）放弃Consistency：
                接受事情会变得“最终一致（Eventually Consistent）”


关系数据库的ACID模型拥有 高一致性 + 可用性
    Atomicity原子性：一个事务中所有操作都必须全部完成，要么全部不完成。
    Consistency一致性. 在事务开始或结束时，数据库应该在一致状态。
    Isolation隔离层. 事务将假定只有它自己在操作数据库，彼此不知晓。
    Durability. 一旦事务完成，就不能返回。

AP: BASE就是为了解决关系数据库强一致性引起的问题而引起的可用性降低而提出的解决方案
BASE是下面三个术语的缩写：
    基本可用（Basically Available）
    软状态（Soft state）
    最终一致（Eventually consistent）
